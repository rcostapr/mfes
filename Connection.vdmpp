class Connection
/*
	Define a connection to a other Place
	Construct a connection with destination, kind of transport, cost of the trip, time of the trip 
*/
types
	public transportType = <Plane> | <Bus> | <Car> | <Ferry> | <Train>
		inv transportType == transportType = <Plane> or transportType = <Bus> or transportType = <Car> or transportType = <Ferry> or transportType = <Train>;
instance variables
	private destination : Place;
	private transport : transportType;
	private time : nat; -- in minutes
	private cost : nat; -- in euros
operations
	public Connection : Place * transportType * nat1 * nat1 ==> Connection
		Connection(Pl,Tr,Ti,Cs) == (
		destination := Pl;
		transport := Tr;
		time := Ti;
		cost := Cs;
		return self;
	)
	pre Ti > 0 and Cs > 0;
	
	-- Get Destination
	public getDestination : () ==> Place
	getDestination() == return destination;
	
	-- Get transport
	public getTransport : () ==> transportType
	getTransport() == return transport;
	
	-- Get time
	public getTime : () ==> nat1
	getTime() == return time
	pre not time <= 0;
	
	-- Get cost
	public getCost : () ==> nat1
	getCost() == return cost
	pre not cost <= 0;

end Connection